■課題１
「カレーを作る」という作業を実行しやすいように細かく分解し、それぞれにかかる時間
を見積もりましょう。
※１つのタスクが長すぎたり曖昧だったりしないように、１タスク＝１０～３０分程度を
意識しましょう。
見積もりにあたりレシピから食材リストを作成する(10分)が必要な場合は、対面指導をする講師に質問しましょう。
-------------------------------------------------------------------------------
＜目的：見積もりの練習＞
１つの大きな作業を、複数の具体的な作業として細分化することで、より正確な作業時間
を見積もることができる。
＜例＞
レシピから食材リストを作成する(10分)
食材を購入する(30分)
食材を洗う(10分)
...
1.レシピから食材リストを作成する(10分)
2.冷蔵庫や棚を確認して、足りない食材をチェック（５分）
3.食材を購入する（30分）
4.食材を洗う（10）
5.野菜の皮をむく（15分）
6.野菜を切る（15分）
7.肉を切る（10分）
8.鍋に油をひき、肉を炒める（10分）
9．野菜を加えて炒める（10分）
10．水を入れて煮込む（20分）
11．アクをとる（5分）
12．カレールーを入れて溶かす（5分）
13．さらに煮込む（10分）
14．ご飯を炊く（30分）
15．盛り付け（5分）


-------------------------------------------------------------------------------
■課題２
会話から見積もり失敗とコミュニケーション課題を読み取り、改善方法を考えましょう。
以下は、ある開発チーム内の会話です。
この中にはタスク見積もりとチーム内コミュニケーションに関する問題点が含まれていま
す。会話をよく読み、以下の設問に答えましょう。
対面指導をする講師と議論しながら進めても大丈夫です。

マネージャー（佐藤）：「例のログイン画面、３時間で終わるって言ってたけど、もう
                        ２日たってるよね？どうなってる？」
開発担当（田中）    ：「はい、最初はHTMLとフォームくらいだからすぐ終わると思った
                        んですけど、セキュリティ対応とか、ユーザー情報の保存処理
                        が意外と面倒で…」
佐藤：              ：「え、それ最初に見積もったときに含まれていなかったの？」
田中：              ：「うーん…とりあえず『画面作るだけ』のつもりで考えていたの
                        で…あと、調べながら進めてる部分も多くて…」
佐藤：              ：「うーん、今後はもう少しちゃんと見積もってから進めようね」

【１】この会話の中で、開発担当者・マネージャー双方に存在する問題点をそれぞれ指摘
    しましょう（１００文字以上）。
    開発担当者の問題点：
    1.見積もりの際に作業内容を細分化せず、表面的な部分（HTMLやフォーム作成）だけで時間を計算してしまった。
    2．不確実な要素（セキュリティ対応やデータ保存処理）を考慮せずに進めてしまったため、見積もりの精度が低くなった。
    3．作業途中で問題に気付いた際に、マネージャーへ報告と相談をせずに放置してしまった。

    マネージャーの問題点：
    1．見積もりの確認時、作業内容の内訳を具体的にチェックしていなかった。
    2．「3時間で終わる」という数値だけを受け入れて、リスクや追加作業の可能性を確認しなかった。
    3．コミュニケーション不足で進捗状況を適切に把握できていなかった。

【２】チーム全体としてタスク見積もりや進捗管理を改善するための具体的なアクション
    を２つ提案しましょう。
    改善策①：タスク見積もりの際に、要件を分解する
    改善策②：進捗報告とリスク共有の仕組みを作る
-------------------------------------------------------------------------------
【１】
    開発担当者の問題点：
    マネージャーの問題点：

【２】
    改善策①：
    改善策②：


-------------------------------------------------------------------------------
■課題３
要件に従ってフォームをHTMLで作成しましょう。
あなたは「会員登録画面」のフロントエンドを作成する担当者になりました。以下の要件
に従って、HTMLの<form>要素を使って記述しましょう。
制作にあたってはChatGPTといった生成AIを使ってもかまいません。

【要件】
    フォームの送信先URLは/registerにしましょう。
    送信方法はPOSTを使いましょう。
    以下の入力項目を含めましょう。
        ・名前（テキスト入力）
        ・メールアドレス（email入力）
        ・パスワード（password入力）
        ・性別（ラジオボタンで「男性」「女性」「その他」）
        ・趣味（複数選択可：チェックボックスで「読書」「旅行」「スポーツ」）
        ・自己紹介（テキストエリア）
        ・送信ボタンを設置しましょう。
        ・各入力欄には適切なlabelを付けましょう。

HTMLだけでなく、フォームの見栄えを良くするためにCSSも活用しましょう。

-------------------------------------------------------------------------------
下記サイト上でHTMLの実装テストを行うことができるので活用する。
https://codepen.io/pen/

＜下記HTMLに書き足していってください＞
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>会員登録フォーム</title>
</head>
<body>
  <label>名前：
    <input type="text" name="name" required>
  </label>
</body>
</html>


-------------------------------------------------------------------------------

