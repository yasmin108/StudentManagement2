-------------------------------------------------------------------------------
■課題１
現在の一覧表示に検索機能を実装したいです。
検索を行うにあたって必要な処理は何かを、以下の項目に沿って書き出してみましょう。
可能であれば実装まで試してみましょう。
ChatGPTなどの生成ＡＩも活用しても問題ありません。
＜書き出す項目＞
1.検索処理のHTTPメソッドは何を用いるか考えましょう。
　※検索機能では主にどのメソッドを用いるのが一般的か、理由も簡単に考えてみましょう。
2.名前"name"というパラメータで検索を行う場合に、リクエストするURLはどのような形に
　なるか記述しましょう。（例：'/students?name=○○'のような形で記述）
3.SpringBootにおいて、この場合のリクエストを受け取るControllerのアノテーションには
　何を用いるか書き出しましょう。
4.nameで検索を行う際のSQLはどんな文法（予約語）が用いられるか考えましょう。
-------------------------------------------------------------------------------
＜回答＞
1.GET or POST どちらがよいか?理由は?
GETを使う
理由：検索はサーバーの状態を変更しない処理だから
URLにパラメータをつけてブックマークや共有もできる
2.http://localhost:8080/students?name=Tanaka

3.1の答えに対応するアノテーション
@GetMapping("/students")
piblic String getStudents(@RequestParam String name){
Student student=repository.searchByName(name);
return student.getName() +""+student.getAge()+"歳";
  }
}

4.対応したSELECT文
@Select("SELECT*FROM student WHERE name =#{name}")
Student searchByName(String name);

-------------------------------------------------------------------------------
■課題２
受講生情報、受講生コース情報が登録できるようになっている前提で、以下の＞ようにソース
を改変し、データの登録処理を確認しましょう。
・serviceクラスの@Transactionalを削除しましょう。
・受講生情報の登録を実行した後に、任意の例外を出力するようにしましょう。
　確認したのち、@Transactionalを付与して、再度登録処理を行いましょう。
-------------------------------------------------------------------------------
＜回答＞
ヒント：ブレイクポイントとデバッグ実行を活用

-------------------------------------------------------------------------------
■課題３
登録処理について、以下のようなSQL文を実行した際の実行結果やエラーメッセージの内容、
idの採番結果を観察しましょう。テーブルは既存のものでも、新たにテスト用に作成した
ものでも構いません。
・Primary Keyとして設定したidにAUTO INCREMENTを付与し、INSERT文でidを指定せずにデ
　ータを５件登録しましょう。
　登録後にidカラムにどのような値が自動採番されているかを確認しましょう。
・上記で登録されたidと同じ値を明示的に指定して、再度INSERT文を実行しましょう。
　どのようなエラーが発生するかを確認し、その原因について考えましょう。
-------------------------------------------------------------------------------
＜回答＞

＜下記のSQLコマンドを実行して確認＞
//MySQL接続
mysql -u root -p
Enter password:****

//データベース一覧表示
show databases;
//データベース作成
create database studentmanagement_taimen2;
//使用データベース指定
use studentmanagement_taimen2;
//テーブル作成
create table student(
id int not null primary key auto_increment,
name varchar(100),
age int
) DEFAULT CHARSET=utf8;

//ここからINSERT文で５件のレコードの登録を行って自動採番の確認、
//idが重複したレコードの登録とエラーの確認を行いましょう。

-------------------------------------------------------------------------------

